<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhGAE0AIcAAOHh4fij0etXa+Pj43x7e2lpadnZ2dXV1bu7u66urrCwsNzc3PP7/bOzs63h8/Dw
        8Of2++np6dfX18fHx+fn5+Xl5cXDw729vXJycs/Pz4zW72VlZQCM08vJyZ2bmwCN07W1tdofkKuqqpOT
        k6WlpQCU1YuLi9Tv+QCj3JeXl/7+/rm5ufj8/tPT083Nzfu5AL+/v9/f36OjowCo3aGhocvLy6ysrP/Y
        D//dAJORkZWVlcHBwXzR7omJiZuZmf/4m4WDg6ioqJ+dnZ+fn4eHhwC75QCS1Y+NjQCy4dvy+sfr9wCf
        2vzBIHd3dwCr34B/f/D5/bm3tzC/5mxsbAC344KBgXV1dZGPjwCX1x++5m/O7P/NFqTf8gCm3YTU7wC4
        45TZ8GHK62dnZwCw4UTD6P/rAGbM7IeFhVrI6nl5ecPq97jm9X59fQCP0wCa2P/jAM/u+HBwcKjg8wC5
        5Pv+/k/F6bDj9ACz4wCq3rTk9eL0+pvb8dfw+gCt4EjE6DvB51PG6QCx4Z/d8gCc2QCu4LOzs/39/ZXB
        Hv/uAM8BfvX19ff39/v7++/v7+7u7vn5+fj4+Pr6+t7e3u3t7fz8/NHR0cbGxn9+fvb29uzs7NLS0tfW
        1vPz8+vr64GAgPT09MXFxe/v746MjN3d3ZSSkoaEhPLy8n18fACZ2JKQkKqpqYiGhrGxsdva2oOCguTk
        5JCOjpycnLGxsf/yoP/hAKurq8jIyNjos5yamra2tv/vAKLJQv7lpsjGxp6enpiYmKenp+bm5qWlpb3n
        9q+vrwCh24iIiACd2ZSUlMDAwMLCwoqKirS0tN/z+mvN7LOxsXfQ7bSzs/Hx8fTy8s7OzqKiol7J6szM
        zK2trb6+vpaWlqCgoLy8vMfFxdjY2NTU1ACp3v/vIvTlp//bAMTLSPzBAPq4vK3d0um/ANcRc7q6uv/v
        AHTAewCcs8rKypHY8P7lnQCvno/GXv/vABG85bTKSPWOVNTHN2O/lujGNP/pAJjFPKTGNwCL02NjY///
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAGAE0AAAI/wD/CRxIsKDBgwgTKlzIsKFDhxf8
        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
        kALLcAlPYPQMQQxFZ/UPERAAOw==
</value>
  </data>
</root>